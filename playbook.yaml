---
- name: Install wigglecam via pipx into system Python
  hosts: wigglenodes # oder 'all', je nach Inventar
  become: false
  vars:
    # Path to the dedicated venv for wigglecam
    wigglecam_venv: "{{ ansible_env.HOME }}/wigglecam-venv"
    # Data directory used by the app to store images, logs, and config
    data_dir: "{{ ansible_env.HOME }}/wigglecam-data"
    # Service unit path for user services
    systemd_user_unit_dir: "{{ ansible_env.HOME }}/.local/share/systemd/user"

  pre_tasks:
    - name: Ensure apt index is up to date
      become: true
      ansible.builtin.apt:
        update_cache: true

    - name: Upgrade system packages
      become: true
      ansible.builtin.apt:
        upgrade: dist

  tasks:
    - name: Ensure apps prerequisites are installed
      become: true
      ansible.builtin.apt:
        name:
          - python3-dev
          - python3-venv
          - python3-pip
          - build-essential
          - libnng-dev
        state: present
        update_cache: false

    - name: Install wigglecam into a dedicated venv
      ansible.builtin.pip:
        name: "wigglecam[node]"
        virtualenv: "{{ wigglecam_venv }}"
        virtualenv_command: "python3 -m venv"
        virtualenv_site_packages: true # system packages visible for picamera2/libcamera
      environment:
        TMPDIR: /var/tmp # avoid /tmp space issues on Pi Zero
      become: false

    - name: Create data directory
      ansible.builtin.file:
        path: "{{ data_dir }}"
        state: directory
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: "0755"

    - name: Setup systemd service for wigglecam-node
      block:
        - name: Ensure systemd user unit directory exists
          ansible.builtin.file:
            path: "{{ systemd_user_unit_dir }}"
            state: directory
            owner: "{{ ansible_user }}"
            group: "{{ ansible_user }}"
            mode: "0755"

        - name: Deploy user systemd service for wigglecam-node
          ansible.builtin.copy:
            dest: "{{ systemd_user_unit_dir }}/wigglecam-node.service"
            owner: "{{ ansible_user }}"
            group: "{{ ansible_user }}"
            mode: "0644"
            content: |
              [Unit]
              Description=wigglecam-node
              After=default.target

              [Service]
              Type=simple
              Restart=always
              WorkingDirectory={{ data_dir }}
              ExecStart={{ wigglecam_venv }}/bin/wigglecam-node --camera {{ camera }} --device-id {{ device_id }}

              [Install]
              WantedBy=default.target

        - name: Reload user systemd daemon
          ansible.builtin.systemd:
            daemon_reload: true
            scope: user

        - name: Enable wigglecam-node user service
          ansible.builtin.systemd:
            name: wigglecam-node.service
            enabled: true
            scope: user

        - name: Start wigglecam-node user service
          ansible.builtin.systemd:
            name: wigglecam-node.service
            state: restarted
            scope: user
